{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1TloJuxi83wbcWta5enS8BBq8BMDh4ntY","timestamp":1747863923334}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **NOTE:** Use File > Save a copy in Drive to make a copy before doing anything else"],"metadata":{"id":"4JeSTdT1pkf-"}},{"cell_type":"markdown","source":["# Project 7: Data Exploration and Visualization"],"metadata":{"id":"FsyyPJK3pspP"}},{"cell_type":"markdown","source":["### Overview\n","\n","In this project, you will apply data exploration and visualization techniques to a real-world dataset of your choice. You'll practice using pandas for data analysis and create meaningful visualizations to gain insights from your data. This project builds on your Python programming skills while introducing you to the exciting world of data science.\n","\n","In [Lab7](https://colab.research.google.com/drive/15QvSh0csZaCU-OuuPIfpWx5wLDDjmqK4?usp=sharing), you explore the titanic dataset and you should use it as a sample and pick a dataset of your interest to do a similar data exploration and visualization."],"metadata":{"id":"XaKjQPf0p04F"}},{"cell_type":"markdown","source":["### Project Objectives\n","\n","*   Find and select a dataset from a real-world data source\n","*   Formulate a clear inquiry question based on your chosen dataset\n","\n","\n","*   Perform exploratory data analysis using pandas functions\n","*   Create at least two meaningful data visualizations\n","\n","\n","*   Analyze your findings and answer your inquiry question\n","*   Reflect on the insights gained through data exploration\n"],"metadata":{"id":"rUc-js6Bpl3R"}},{"cell_type":"markdown","source":["### Data Sources\n","You can choose from various online data sources such as:\n","\n","* [Kaggle](https://www.kaggle.com/datasets) - Wide variety of datasets\n","* [data.gov](https://www.data.gov/) - U.S. government data\n","* [Our World in Data](https://ourworldindata.org/) - Global development data\n","* [GitHub](https://github.com/datasets) - Curated datasets\n","* [Google Dataset Search](https://datasetsearch.research.google.com/) - Search for datasets\n","* Or any other reliable data source you find interesting"],"metadata":{"id":"HHdDmt7LsInH"}},{"cell_type":"markdown","source":["## Part 1: Dataset Selection and Initial Exploration\n","\n"],"metadata":{"id":"U0bTaSGqsuD3"}},{"cell_type":"markdown","source":["#### TODO Tasks:"],"metadata":{"id":"b51Zax58tbRj"}},{"cell_type":"markdown","source":["1. Select Your Dataset: Choose a dataset that interests you. Make sure it has at least 100 rows and multiple columns with different data types (e.g., numerical, categorical, dates).\n","\n","Please create either text or code cells in between the TODO tasks to do the work."],"metadata":{"id":"ZBCbqzJjtZXz"}},{"cell_type":"markdown","source":["2. Import Libraries: Import the necessary libraries (pandas, matplotlib, seaborn) at the beginning of your notebook by creating code cells below this text cell."],"metadata":{"id":"zayF0dhNtg5x"}},{"cell_type":"markdown","source":["3. Load Your Data: Load your chosen dataset using pandas and save it to a pandas dataframe. Please create a code cell below this text cell to do it."],"metadata":{"id":"jVfaTxqXt3VS"}},{"cell_type":"markdown","source":["4. Data Summary: Use the following functions to do inital exploration your dataset:\n","\n","* info() - Display information about the dataset structure\n","* describe() - Show statistical summary of numerical columns\n","* head() - Display the first 5 rows (df.head())\n","* shape - Show the dimensions of the dataset (e.g. df.shape)\n","* columns - Get the column names (e.g. df.columns)\n","\n","You may use 5 code cells below this text cell to accomplish it."],"metadata":{"id":"GbS4Cwh6t_Wy"}},{"cell_type":"markdown","source":["5. Inquiry Question: Write a clear, specific question that you want to answer using your dataset by creating a text cell below and **write the question in bold please.**\n","\n","For example:\n","\n","* \"How has the average temperature changed in major cities over the past decade?\"\n","\n","* \"What factors are most strongly correlated with housing prices?\"\n","\n","* \"Is there a relationship between education level and income?\""],"metadata":{"id":"1CAoVArPubG2"}},{"cell_type":"code","source":[" #import pandas\n","\n","import pandas as pd\n","df = pd.read_csv('https://gist.githubusercontent.com/shamicatendolkar/ad539e80f7d25be3994dba624d27f6fb/raw/80d232167412ec4efb3b036a913a8aadbc8c3706/social_media_vs_productivity.csv')\n","df.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"aiKWawLnzxGE","executionInfo":{"status":"ok","timestamp":1747863965410,"user_tz":420,"elapsed":2429,"user":{"displayName":"Shamica Tendolkar","userId":"07016395350049957208"}},"outputId":"9fe451d6-2a91-410e-ddc7-9012eda5301f"},"execution_count":1,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age  gender    job_type  daily_social_media_time  \\\n","0   56    Male  Unemployed                 4.180940   \n","1   46    Male      Health                 3.249603   \n","2   32    Male     Finance                      NaN   \n","3   60  Female  Unemployed                      NaN   \n","4   25    Male          IT                      NaN   \n","\n","  social_platform_preference  number_of_notifications  work_hours_per_day  \\\n","0                   Facebook                       61            6.753558   \n","1                    Twitter                       59            9.169296   \n","2                    Twitter                       57            7.910952   \n","3                   Facebook                       59            6.355027   \n","4                   Telegram                       66            6.214096   \n","\n","   perceived_productivity_score  actual_productivity_score  stress_level  \\\n","0                      8.040464                   7.291555           4.0   \n","1                      5.063368                   5.165093           7.0   \n","2                      3.861762                   3.474053           4.0   \n","3                      2.916331                   1.774869           6.0   \n","4                      8.868753                        NaN           7.0   \n","\n","   sleep_hours  screen_time_before_sleep  breaks_during_work  uses_focus_apps  \\\n","0     5.116546                  0.419102                   8            False   \n","1     5.103897                  0.671519                   7             True   \n","2     8.583222                  0.624378                   0             True   \n","3     6.052984                  1.204540                   1            False   \n","4     5.405706                  1.876254                   1            False   \n","\n","   has_digital_wellbeing_enabled  coffee_consumption_per_day  \\\n","0                          False                           4   \n","1                           True                           2   \n","2                          False                           3   \n","3                          False                           0   \n","4                           True                           1   \n","\n","   days_feeling_burnout_per_month  weekly_offline_hours  \\\n","0                              11             21.927072   \n","1                              25              0.000000   \n","2                              17             10.322044   \n","3                               4             23.876616   \n","4                              30             10.653519   \n","\n","   job_satisfaction_score  \n","0                6.336688  \n","1                3.412427  \n","2                2.474944  \n","3                1.733670  \n","4                9.693060  "],"text/html":["\n","  <div id=\"df-7e58f9f5-bfaa-476b-ae25-6e088b52abd7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>job_type</th>\n","      <th>daily_social_media_time</th>\n","      <th>social_platform_preference</th>\n","      <th>number_of_notifications</th>\n","      <th>work_hours_per_day</th>\n","      <th>perceived_productivity_score</th>\n","      <th>actual_productivity_score</th>\n","      <th>stress_level</th>\n","      <th>sleep_hours</th>\n","      <th>screen_time_before_sleep</th>\n","      <th>breaks_during_work</th>\n","      <th>uses_focus_apps</th>\n","      <th>has_digital_wellbeing_enabled</th>\n","      <th>coffee_consumption_per_day</th>\n","      <th>days_feeling_burnout_per_month</th>\n","      <th>weekly_offline_hours</th>\n","      <th>job_satisfaction_score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>56</td>\n","      <td>Male</td>\n","      <td>Unemployed</td>\n","      <td>4.180940</td>\n","      <td>Facebook</td>\n","      <td>61</td>\n","      <td>6.753558</td>\n","      <td>8.040464</td>\n","      <td>7.291555</td>\n","      <td>4.0</td>\n","      <td>5.116546</td>\n","      <td>0.419102</td>\n","      <td>8</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>4</td>\n","      <td>11</td>\n","      <td>21.927072</td>\n","      <td>6.336688</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>46</td>\n","      <td>Male</td>\n","      <td>Health</td>\n","      <td>3.249603</td>\n","      <td>Twitter</td>\n","      <td>59</td>\n","      <td>9.169296</td>\n","      <td>5.063368</td>\n","      <td>5.165093</td>\n","      <td>7.0</td>\n","      <td>5.103897</td>\n","      <td>0.671519</td>\n","      <td>7</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>2</td>\n","      <td>25</td>\n","      <td>0.000000</td>\n","      <td>3.412427</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>32</td>\n","      <td>Male</td>\n","      <td>Finance</td>\n","      <td>NaN</td>\n","      <td>Twitter</td>\n","      <td>57</td>\n","      <td>7.910952</td>\n","      <td>3.861762</td>\n","      <td>3.474053</td>\n","      <td>4.0</td>\n","      <td>8.583222</td>\n","      <td>0.624378</td>\n","      <td>0</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>3</td>\n","      <td>17</td>\n","      <td>10.322044</td>\n","      <td>2.474944</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>60</td>\n","      <td>Female</td>\n","      <td>Unemployed</td>\n","      <td>NaN</td>\n","      <td>Facebook</td>\n","      <td>59</td>\n","      <td>6.355027</td>\n","      <td>2.916331</td>\n","      <td>1.774869</td>\n","      <td>6.0</td>\n","      <td>6.052984</td>\n","      <td>1.204540</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>23.876616</td>\n","      <td>1.733670</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>25</td>\n","      <td>Male</td>\n","      <td>IT</td>\n","      <td>NaN</td>\n","      <td>Telegram</td>\n","      <td>66</td>\n","      <td>6.214096</td>\n","      <td>8.868753</td>\n","      <td>NaN</td>\n","      <td>7.0</td>\n","      <td>5.405706</td>\n","      <td>1.876254</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>10.653519</td>\n","      <td>9.693060</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7e58f9f5-bfaa-476b-ae25-6e088b52abd7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7e58f9f5-bfaa-476b-ae25-6e088b52abd7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7e58f9f5-bfaa-476b-ae25-6e088b52abd7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-b0bf47df-d04c-409c-aa2f-e0ffc426bea0\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b0bf47df-d04c-409c-aa2f-e0ffc426bea0')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-b0bf47df-d04c-409c-aa2f-e0ffc426bea0 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 30000,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 18,\n        \"max\": 65,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          24,\n          65,\n          54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Male\",\n          \"Female\",\n          \"Other\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"job_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Unemployed\",\n          \"Health\",\n          \"Student\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"daily_social_media_time\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.0748126931311606,\n        \"min\": 0.0,\n        \"max\": 17.973255602826175,\n        \"num_unique_values\": 25375,\n        \"samples\": [\n          3.684045646959003,\n          2.771920308157635,\n          5.42262236996233\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"social_platform_preference\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Twitter\",\n          \"Instagram\",\n          \"Telegram\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"number_of_notifications\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 30,\n        \"max\": 90,\n        \"num_unique_values\": 61,\n        \"samples\": [\n          61,\n          60,\n          81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"work_hours_per_day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.997735658200184,\n        \"min\": 0.0,\n        \"max\": 12.0,\n        \"num_unique_values\": 29821,\n        \"samples\": [\n          6.082064003239508,\n          7.947368064900783,\n          9.980814369265495\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"perceived_productivity_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.023470443810372,\n        \"min\": 2.0002524300446303,\n        \"max\": 8.999375647878052,\n        \"num_unique_values\": 28386,\n        \"samples\": [\n          4.7781006486083015,\n          6.987943882685254,\n          2.3853474136536623\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"actual_productivity_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.883378033333406,\n        \"min\": 0.2968118865395523,\n        \"max\": 9.84625801321986,\n        \"num_unique_values\": 27635,\n        \"samples\": [\n          7.836103423226295,\n          4.343287832451988,\n          6.947262643204099\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stress_level\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.8663436996643825,\n        \"min\": 1.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          2.0,\n          7.0,\n          9.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sleep_hours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.464003861797961,\n        \"min\": 3.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 26926,\n        \"samples\": [\n          6.392710695886443,\n          9.190527021547432,\n          6.665427896899153\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"screen_time_before_sleep\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6533550012054317,\n        \"min\": 0.0,\n        \"max\": 3.0,\n        \"num_unique_values\": 25567,\n        \"samples\": [\n          1.3231972063971356,\n          1.9820659371772216,\n          0.3972876426297775\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"breaks_during_work\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 10,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          4,\n          8,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"uses_focus_apps\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"has_digital_wellbeing_enabled\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"coffee_consumption_per_day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 10,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          5,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days_feeling_burnout_per_month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 0,\n        \"max\": 31,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          12,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weekly_offline_hours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.28041535114658,\n        \"min\": 0.0,\n        \"max\": 40.96476891751684,\n        \"num_unique_values\": 26737,\n        \"samples\": [\n          7.680614628165515,\n          5.493788071362975\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"job_satisfaction_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.121193587784209,\n        \"min\": 0.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 27079,\n        \"samples\": [\n          2.211871216191648,\n          3.540921328057246\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":1}]},{"cell_type":"code","source":["info = df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nHbRrbYaz9wu","executionInfo":{"status":"ok","timestamp":1747863988120,"user_tz":420,"elapsed":22,"user":{"displayName":"Shamica Tendolkar","userId":"07016395350049957208"}},"outputId":"0b512eb1-f68f-48d0-a7f1-4a8f1d6ca729"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 30000 entries, 0 to 29999\n","Data columns (total 19 columns):\n"," #   Column                          Non-Null Count  Dtype  \n","---  ------                          --------------  -----  \n"," 0   age                             30000 non-null  int64  \n"," 1   gender                          30000 non-null  object \n"," 2   job_type                        30000 non-null  object \n"," 3   daily_social_media_time         27235 non-null  float64\n"," 4   social_platform_preference      30000 non-null  object \n"," 5   number_of_notifications         30000 non-null  int64  \n"," 6   work_hours_per_day              30000 non-null  float64\n"," 7   perceived_productivity_score    28386 non-null  float64\n"," 8   actual_productivity_score       27635 non-null  float64\n"," 9   stress_level                    28096 non-null  float64\n"," 10  sleep_hours                     27402 non-null  float64\n"," 11  screen_time_before_sleep        27789 non-null  float64\n"," 12  breaks_during_work              30000 non-null  int64  \n"," 13  uses_focus_apps                 30000 non-null  bool   \n"," 14  has_digital_wellbeing_enabled   30000 non-null  bool   \n"," 15  coffee_consumption_per_day      30000 non-null  int64  \n"," 16  days_feeling_burnout_per_month  30000 non-null  int64  \n"," 17  weekly_offline_hours            30000 non-null  float64\n"," 18  job_satisfaction_score          27270 non-null  float64\n","dtypes: bool(2), float64(9), int64(5), object(3)\n","memory usage: 3.9+ MB\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"E_xDUG4Gz-Co","executionInfo":{"status":"ok","timestamp":1747864000083,"user_tz":420,"elapsed":82,"user":{"displayName":"Shamica Tendolkar","userId":"07016395350049957208"}},"outputId":"03f51f8d-99cf-409e-e833-5654e6d04c20"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                age  daily_social_media_time  number_of_notifications  \\\n","count  30000.000000             27235.000000             30000.000000   \n","mean      41.486867                 3.113418                59.958767   \n","std       13.835221                 2.074813                 7.723772   \n","min       18.000000                 0.000000                30.000000   \n","25%       30.000000                 1.639566                55.000000   \n","50%       41.000000                 3.025913                60.000000   \n","75%       53.000000                 4.368917                65.000000   \n","max       65.000000                17.973256                90.000000   \n","\n","       work_hours_per_day  perceived_productivity_score  \\\n","count        30000.000000                  28386.000000   \n","mean             6.990792                      5.510488   \n","std              1.997736                      2.023470   \n","min              0.000000                      2.000252   \n","25%              5.643771                      3.757861   \n","50%              6.990641                      5.525005   \n","75%              8.354725                      7.265776   \n","max             12.000000                      8.999376   \n","\n","       actual_productivity_score  stress_level   sleep_hours  \\\n","count               27635.000000  28096.000000  27402.000000   \n","mean                    4.951805      5.514059      6.500247   \n","std                     1.883378      2.866344      1.464004   \n","min                     0.296812      1.000000      3.000000   \n","25%                     3.373284      3.000000      5.493536   \n","50%                     4.951742      6.000000      6.498340   \n","75%                     6.526342      8.000000      7.504143   \n","max                     9.846258     10.000000     10.000000   \n","\n","       screen_time_before_sleep  breaks_during_work  \\\n","count              27789.000000        30000.000000   \n","mean                   1.025568            4.992200   \n","std                    0.653355            3.173737   \n","min                    0.000000            0.000000   \n","25%                    0.528490            2.000000   \n","50%                    1.006159            5.000000   \n","75%                    1.477221            8.000000   \n","max                    3.000000           10.000000   \n","\n","       coffee_consumption_per_day  days_feeling_burnout_per_month  \\\n","count                30000.000000                    30000.000000   \n","mean                     1.999300                       15.557067   \n","std                      1.410047                        9.252956   \n","min                      0.000000                        0.000000   \n","25%                      1.000000                        8.000000   \n","50%                      2.000000                       16.000000   \n","75%                      3.000000                       24.000000   \n","max                     10.000000                       31.000000   \n","\n","       weekly_offline_hours  job_satisfaction_score  \n","count          30000.000000            27270.000000  \n","mean              10.360655                4.964901  \n","std                7.280415                2.121194  \n","min                0.000000                0.000000  \n","25%                4.541872                3.363580  \n","50%               10.013677                4.951049  \n","75%               15.300809                6.581323  \n","max               40.964769               10.000000  "],"text/html":["\n","  <div id=\"df-e29e6992-b98d-4c5a-b056-29c090ac2fc7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>daily_social_media_time</th>\n","      <th>number_of_notifications</th>\n","      <th>work_hours_per_day</th>\n","      <th>perceived_productivity_score</th>\n","      <th>actual_productivity_score</th>\n","      <th>stress_level</th>\n","      <th>sleep_hours</th>\n","      <th>screen_time_before_sleep</th>\n","      <th>breaks_during_work</th>\n","      <th>coffee_consumption_per_day</th>\n","      <th>days_feeling_burnout_per_month</th>\n","      <th>weekly_offline_hours</th>\n","      <th>job_satisfaction_score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>30000.000000</td>\n","      <td>27235.000000</td>\n","      <td>30000.000000</td>\n","      <td>30000.000000</td>\n","      <td>28386.000000</td>\n","      <td>27635.000000</td>\n","      <td>28096.000000</td>\n","      <td>27402.000000</td>\n","      <td>27789.000000</td>\n","      <td>30000.000000</td>\n","      <td>30000.000000</td>\n","      <td>30000.000000</td>\n","      <td>30000.000000</td>\n","      <td>27270.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>41.486867</td>\n","      <td>3.113418</td>\n","      <td>59.958767</td>\n","      <td>6.990792</td>\n","      <td>5.510488</td>\n","      <td>4.951805</td>\n","      <td>5.514059</td>\n","      <td>6.500247</td>\n","      <td>1.025568</td>\n","      <td>4.992200</td>\n","      <td>1.999300</td>\n","      <td>15.557067</td>\n","      <td>10.360655</td>\n","      <td>4.964901</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>13.835221</td>\n","      <td>2.074813</td>\n","      <td>7.723772</td>\n","      <td>1.997736</td>\n","      <td>2.023470</td>\n","      <td>1.883378</td>\n","      <td>2.866344</td>\n","      <td>1.464004</td>\n","      <td>0.653355</td>\n","      <td>3.173737</td>\n","      <td>1.410047</td>\n","      <td>9.252956</td>\n","      <td>7.280415</td>\n","      <td>2.121194</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>18.000000</td>\n","      <td>0.000000</td>\n","      <td>30.000000</td>\n","      <td>0.000000</td>\n","      <td>2.000252</td>\n","      <td>0.296812</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>30.000000</td>\n","      <td>1.639566</td>\n","      <td>55.000000</td>\n","      <td>5.643771</td>\n","      <td>3.757861</td>\n","      <td>3.373284</td>\n","      <td>3.000000</td>\n","      <td>5.493536</td>\n","      <td>0.528490</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>8.000000</td>\n","      <td>4.541872</td>\n","      <td>3.363580</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>41.000000</td>\n","      <td>3.025913</td>\n","      <td>60.000000</td>\n","      <td>6.990641</td>\n","      <td>5.525005</td>\n","      <td>4.951742</td>\n","      <td>6.000000</td>\n","      <td>6.498340</td>\n","      <td>1.006159</td>\n","      <td>5.000000</td>\n","      <td>2.000000</td>\n","      <td>16.000000</td>\n","      <td>10.013677</td>\n","      <td>4.951049</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>53.000000</td>\n","      <td>4.368917</td>\n","      <td>65.000000</td>\n","      <td>8.354725</td>\n","      <td>7.265776</td>\n","      <td>6.526342</td>\n","      <td>8.000000</td>\n","      <td>7.504143</td>\n","      <td>1.477221</td>\n","      <td>8.000000</td>\n","      <td>3.000000</td>\n","      <td>24.000000</td>\n","      <td>15.300809</td>\n","      <td>6.581323</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>65.000000</td>\n","      <td>17.973256</td>\n","      <td>90.000000</td>\n","      <td>12.000000</td>\n","      <td>8.999376</td>\n","      <td>9.846258</td>\n","      <td>10.000000</td>\n","      <td>10.000000</td>\n","      <td>3.000000</td>\n","      <td>10.000000</td>\n","      <td>10.000000</td>\n","      <td>31.000000</td>\n","      <td>40.964769</td>\n","      <td>10.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e29e6992-b98d-4c5a-b056-29c090ac2fc7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e29e6992-b98d-4c5a-b056-29c090ac2fc7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e29e6992-b98d-4c5a-b056-29c090ac2fc7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-1d2326ed-75ee-426e-8bf5-cec441b8e7b7\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1d2326ed-75ee-426e-8bf5-cec441b8e7b7')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-1d2326ed-75ee-426e-8bf5-cec441b8e7b7 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10593.366079808871,\n        \"min\": 13.835221042455247,\n        \"max\": 30000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          41.486866666666664,\n          41.0,\n          30000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"daily_social_media_time\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9627.402086634787,\n        \"min\": 0.0,\n        \"max\": 27235.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.113418084978472,\n          3.025912770735911,\n          27235.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"number_of_notifications\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10588.059223643308,\n        \"min\": 7.723772072896567,\n        \"max\": 30000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          59.95876666666667,\n          60.0,\n          30000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"work_hours_per_day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10604.482169797851,\n        \"min\": 0.0,\n        \"max\": 30000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6.990792281703837,\n          6.990641293098886,\n          30000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"perceived_productivity_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10034.194917567107,\n        \"min\": 2.0002524300446303,\n        \"max\": 28386.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5.510488184340142,\n          5.525005063662228,\n          28386.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"actual_productivity_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9768.840740846492,\n        \"min\": 0.2968118865395523,\n        \"max\": 27635.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4.951804879665391,\n          4.951741600417723,\n          27635.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stress_level\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9931.599002541001,\n        \"min\": 1.0,\n        \"max\": 28096.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5.514058940774487,\n          6.0,\n          28096.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sleep_hours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9686.026812661585,\n        \"min\": 1.464003861797961,\n        \"max\": 27402.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6.500247461760461,\n          6.4983398982218095,\n          27402.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"screen_time_before_sleep\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9824.506767526505,\n        \"min\": 0.0,\n        \"max\": 27789.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.0255681548961753,\n          1.0061586763775965,\n          27789.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"breaks_during_work\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10604.927062238125,\n        \"min\": 0.0,\n        \"max\": 30000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4.9922,\n          5.0,\n          30000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"coffee_consumption_per_day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10605.621843375817,\n        \"min\": 0.0,\n        \"max\": 30000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.9993,\n          2.0,\n          30000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days_feeling_burnout_per_month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10601.362866587195,\n        \"min\": 0.0,\n        \"max\": 30000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          15.557066666666667,\n          16.0,\n          30000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weekly_offline_hours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10602.140948262462,\n        \"min\": 0.0,\n        \"max\": 30000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          10.360654646637764,\n          10.013676707225798,\n          30000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"job_satisfaction_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9639.786084885056,\n        \"min\": 0.0,\n        \"max\": 27270.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4.96490086213521,\n          4.951049035003638,\n          27270.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"ufSEGF4N0CJS","executionInfo":{"status":"ok","timestamp":1747864012033,"user_tz":420,"elapsed":105,"user":{"displayName":"Shamica Tendolkar","userId":"07016395350049957208"}},"outputId":"463da8d5-8887-4097-a5fb-fae165ed4f10"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age  gender    job_type  daily_social_media_time  \\\n","0   56    Male  Unemployed                 4.180940   \n","1   46    Male      Health                 3.249603   \n","2   32    Male     Finance                      NaN   \n","3   60  Female  Unemployed                      NaN   \n","4   25    Male          IT                      NaN   \n","\n","  social_platform_preference  number_of_notifications  work_hours_per_day  \\\n","0                   Facebook                       61            6.753558   \n","1                    Twitter                       59            9.169296   \n","2                    Twitter                       57            7.910952   \n","3                   Facebook                       59            6.355027   \n","4                   Telegram                       66            6.214096   \n","\n","   perceived_productivity_score  actual_productivity_score  stress_level  \\\n","0                      8.040464                   7.291555           4.0   \n","1                      5.063368                   5.165093           7.0   \n","2                      3.861762                   3.474053           4.0   \n","3                      2.916331                   1.774869           6.0   \n","4                      8.868753                        NaN           7.0   \n","\n","   sleep_hours  screen_time_before_sleep  breaks_during_work  uses_focus_apps  \\\n","0     5.116546                  0.419102                   8            False   \n","1     5.103897                  0.671519                   7             True   \n","2     8.583222                  0.624378                   0             True   \n","3     6.052984                  1.204540                   1            False   \n","4     5.405706                  1.876254                   1            False   \n","\n","   has_digital_wellbeing_enabled  coffee_consumption_per_day  \\\n","0                          False                           4   \n","1                           True                           2   \n","2                          False                           3   \n","3                          False                           0   \n","4                           True                           1   \n","\n","   days_feeling_burnout_per_month  weekly_offline_hours  \\\n","0                              11             21.927072   \n","1                              25              0.000000   \n","2                              17             10.322044   \n","3                               4             23.876616   \n","4                              30             10.653519   \n","\n","   job_satisfaction_score  \n","0                6.336688  \n","1                3.412427  \n","2                2.474944  \n","3                1.733670  \n","4                9.693060  "],"text/html":["\n","  <div id=\"df-7a3ddad1-1c6b-4168-8478-536f7cce16c0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>job_type</th>\n","      <th>daily_social_media_time</th>\n","      <th>social_platform_preference</th>\n","      <th>number_of_notifications</th>\n","      <th>work_hours_per_day</th>\n","      <th>perceived_productivity_score</th>\n","      <th>actual_productivity_score</th>\n","      <th>stress_level</th>\n","      <th>sleep_hours</th>\n","      <th>screen_time_before_sleep</th>\n","      <th>breaks_during_work</th>\n","      <th>uses_focus_apps</th>\n","      <th>has_digital_wellbeing_enabled</th>\n","      <th>coffee_consumption_per_day</th>\n","      <th>days_feeling_burnout_per_month</th>\n","      <th>weekly_offline_hours</th>\n","      <th>job_satisfaction_score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>56</td>\n","      <td>Male</td>\n","      <td>Unemployed</td>\n","      <td>4.180940</td>\n","      <td>Facebook</td>\n","      <td>61</td>\n","      <td>6.753558</td>\n","      <td>8.040464</td>\n","      <td>7.291555</td>\n","      <td>4.0</td>\n","      <td>5.116546</td>\n","      <td>0.419102</td>\n","      <td>8</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>4</td>\n","      <td>11</td>\n","      <td>21.927072</td>\n","      <td>6.336688</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>46</td>\n","      <td>Male</td>\n","      <td>Health</td>\n","      <td>3.249603</td>\n","      <td>Twitter</td>\n","      <td>59</td>\n","      <td>9.169296</td>\n","      <td>5.063368</td>\n","      <td>5.165093</td>\n","      <td>7.0</td>\n","      <td>5.103897</td>\n","      <td>0.671519</td>\n","      <td>7</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>2</td>\n","      <td>25</td>\n","      <td>0.000000</td>\n","      <td>3.412427</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>32</td>\n","      <td>Male</td>\n","      <td>Finance</td>\n","      <td>NaN</td>\n","      <td>Twitter</td>\n","      <td>57</td>\n","      <td>7.910952</td>\n","      <td>3.861762</td>\n","      <td>3.474053</td>\n","      <td>4.0</td>\n","      <td>8.583222</td>\n","      <td>0.624378</td>\n","      <td>0</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>3</td>\n","      <td>17</td>\n","      <td>10.322044</td>\n","      <td>2.474944</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>60</td>\n","      <td>Female</td>\n","      <td>Unemployed</td>\n","      <td>NaN</td>\n","      <td>Facebook</td>\n","      <td>59</td>\n","      <td>6.355027</td>\n","      <td>2.916331</td>\n","      <td>1.774869</td>\n","      <td>6.0</td>\n","      <td>6.052984</td>\n","      <td>1.204540</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>23.876616</td>\n","      <td>1.733670</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>25</td>\n","      <td>Male</td>\n","      <td>IT</td>\n","      <td>NaN</td>\n","      <td>Telegram</td>\n","      <td>66</td>\n","      <td>6.214096</td>\n","      <td>8.868753</td>\n","      <td>NaN</td>\n","      <td>7.0</td>\n","      <td>5.405706</td>\n","      <td>1.876254</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>10.653519</td>\n","      <td>9.693060</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a3ddad1-1c6b-4168-8478-536f7cce16c0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7a3ddad1-1c6b-4168-8478-536f7cce16c0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7a3ddad1-1c6b-4168-8478-536f7cce16c0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-24c7da59-6d9a-4252-8d00-660c5224255e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-24c7da59-6d9a-4252-8d00-660c5224255e')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-24c7da59-6d9a-4252-8d00-660c5224255e button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 30000,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 18,\n        \"max\": 65,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          24,\n          65,\n          54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Male\",\n          \"Female\",\n          \"Other\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"job_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Unemployed\",\n          \"Health\",\n          \"Student\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"daily_social_media_time\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.0748126931311606,\n        \"min\": 0.0,\n        \"max\": 17.973255602826175,\n        \"num_unique_values\": 25375,\n        \"samples\": [\n          3.684045646959003,\n          2.771920308157635,\n          5.42262236996233\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"social_platform_preference\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Twitter\",\n          \"Instagram\",\n          \"Telegram\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"number_of_notifications\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 30,\n        \"max\": 90,\n        \"num_unique_values\": 61,\n        \"samples\": [\n          61,\n          60,\n          81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"work_hours_per_day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.997735658200184,\n        \"min\": 0.0,\n        \"max\": 12.0,\n        \"num_unique_values\": 29821,\n        \"samples\": [\n          6.082064003239508,\n          7.947368064900783,\n          9.980814369265495\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"perceived_productivity_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.023470443810372,\n        \"min\": 2.0002524300446303,\n        \"max\": 8.999375647878052,\n        \"num_unique_values\": 28386,\n        \"samples\": [\n          4.7781006486083015,\n          6.987943882685254,\n          2.3853474136536623\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"actual_productivity_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.883378033333406,\n        \"min\": 0.2968118865395523,\n        \"max\": 9.84625801321986,\n        \"num_unique_values\": 27635,\n        \"samples\": [\n          7.836103423226295,\n          4.343287832451988,\n          6.947262643204099\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stress_level\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.8663436996643825,\n        \"min\": 1.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          2.0,\n          7.0,\n          9.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sleep_hours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.464003861797961,\n        \"min\": 3.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 26926,\n        \"samples\": [\n          6.392710695886443,\n          9.190527021547432,\n          6.665427896899153\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"screen_time_before_sleep\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6533550012054317,\n        \"min\": 0.0,\n        \"max\": 3.0,\n        \"num_unique_values\": 25567,\n        \"samples\": [\n          1.3231972063971356,\n          1.9820659371772216,\n          0.3972876426297775\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"breaks_during_work\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 10,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          4,\n          8,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"uses_focus_apps\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"has_digital_wellbeing_enabled\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"coffee_consumption_per_day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 10,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          5,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days_feeling_burnout_per_month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 0,\n        \"max\": 31,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          12,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weekly_offline_hours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.28041535114658,\n        \"min\": 0.0,\n        \"max\": 40.96476891751684,\n        \"num_unique_values\": 26737,\n        \"samples\": [\n          7.680614628165515,\n          5.493788071362975\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"job_satisfaction_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.121193587784209,\n        \"min\": 0.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 27079,\n        \"samples\": [\n          2.211871216191648,\n          3.540921328057246\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"304JfdJi0E_-","executionInfo":{"status":"ok","timestamp":1747864022925,"user_tz":420,"elapsed":44,"user":{"displayName":"Shamica Tendolkar","userId":"07016395350049957208"}},"outputId":"5d6f19b2-468c-471b-99f7-3da0ef04b9f4"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(30000, 19)"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QpQ1zCve0IxU","executionInfo":{"status":"ok","timestamp":1747864033613,"user_tz":420,"elapsed":37,"user":{"displayName":"Shamica Tendolkar","userId":"07016395350049957208"}},"outputId":"0e51dceb-c26d-417c-9ae7-c66c506295bc"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['age', 'gender', 'job_type', 'daily_social_media_time',\n","       'social_platform_preference', 'number_of_notifications',\n","       'work_hours_per_day', 'perceived_productivity_score',\n","       'actual_productivity_score', 'stress_level', 'sleep_hours',\n","       'screen_time_before_sleep', 'breaks_during_work', 'uses_focus_apps',\n","       'has_digital_wellbeing_enabled', 'coffee_consumption_per_day',\n","       'days_feeling_burnout_per_month', 'weekly_offline_hours',\n","       'job_satisfaction_score'],\n","      dtype='object')"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["#Inquiry questions\n","\n","1 Is there a correlation between the amount of time spent on social media and a person's self-reported productivity level?\n","Does the timing of social media use (e.g., during work hours vs. leisure time) impact productivity differently?\n","Are there differences in the impact of social media on productivity based on demographic factors such as age or occupation?\n","Do individuals who use social media for work-related purposes report higher or lower productivity compared to those who use it primarily for personal reasons?"],"metadata":{"id":"Pw5OhtER0MxL"}},{"cell_type":"markdown","source":["## Part 2: Data Visualization and Analysis"],"metadata":{"id":"leRD1hhlvBL9"}},{"cell_type":"markdown","source":["#### TODO Tasks:"],"metadata":{"id":"SQL1K1UivEhO"}},{"cell_type":"markdown","source":["1. Data Cleaning (if necessary): Check for and handle any missing values, duplicates, or data quality issues.\n","\n","**NOTE: This could be a daunting task even for seasoned data scientists. My suggestion is to use a dataset that is already clean if you can for the purpose of completing this assignment in a week.**"],"metadata":{"id":"MH6rcdRpxz1h"}},{"cell_type":"markdown","source":["Examples:\n","\n","* Checking for missing values: df.isnull().sum()\n","* Dropping rows with any missing values: df.dropna(inplace=True)\n","* Dropping columns with all missing values: df.dropna(axis=1, how='all', inplace=True)\n","* Removing duplicate row: df.drop_duplicates(inplace=True)"],"metadata":{"id":"k3EEucl20uOF"}},{"cell_type":"markdown","source":["2. Create Visualizations: Create at least 2 different types of visualizations that help answer your research question. Choose from:\n","\n","* Bar charts\n","* Line plots\n","* Scatter plots\n","* Histograms\n","* Box plots\n","* Heatmaps\n","* Any other appropriate visualization"],"metadata":{"id":"Cxqgn-BPyPo2"}},{"cell_type":"markdown","source":["3. Customize Your Plots: Make sure your visualizations are clear and informative by:\n","\n","* Adding appropriate titles\n","* Labeling axes\n","* Using colors effectively\n","* Adding legends when necessary"],"metadata":{"id":"w5sbnVPdyksd"}},{"cell_type":"markdown","source":["Please create code cells below this to create your visualizations."],"metadata":{"id":"2qIRJi1az118"}},{"cell_type":"markdown","source":["4. Analysis: Write 1-2 paragraphs discussing:\n","\n","* Whether your research question can be answered with the available data\n","* What insights you discovered through your visualizations\n","* Any unexpected or interesting findings\n","* Limitations of your analysis\n","* Suggestions for further investigation\n","\n","Please create a text cell below this cell to write your analysis."],"metadata":{"id":"OdQzYjldys6g"}},{"cell_type":"code","source":["# data cleaning\n","df.isnull().sum()\n","df.dropna(inplace=True)\n","df.dropna(axis=1, how='all', inplace=True)\n","df.drop_duplicates(inplace=True)\n"],"metadata":{"id":"YcNs-zOj0cei","executionInfo":{"status":"ok","timestamp":1747864114183,"user_tz":420,"elapsed":55,"user":{"displayName":"Shamica Tendolkar","userId":"07016395350049957208"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["#histogram of age and number of notifications\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","# Assuming you want to plot the distribution of a categorical column\n","# Replace 'your_column_name' with the actual column name from your dataframe\n","#sns.histplot(x='age', data=df, bins=20)\n","plt.figure(figsize=(10, 6)) # Adjust figure size for better readability\n","\n","print(df['age'].min())\n","nb=12\n","age_bins = pd.cut(df['age'], bins=nb, ordered=True) # Example: Create 10 bins\n","bin_edges = [18, 20, 30, 40, 50, 65]\n","age_bins = pd.cut(df['age'], bins=bin_edges, right=True, include_lowest=True, ordered=True)\n","\n","sns.countplot(x=age_bins, data=df)\n","\n","plt.xticks(rotation=45, ha='right')\n","\n","\n","plt.xlabel('age')  # Label the x-axis\n","plt.tight_layout()\n","plt.ylabel('number of notifications')  # Label the y-axis\n","plt.title('Age & Average Notifications')\n","\n","plt.show()\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":646},"id":"spKu2NDZ0eEt","executionInfo":{"status":"ok","timestamp":1747864144817,"user_tz":420,"elapsed":1493,"user":{"displayName":"Shamica Tendolkar","userId":"07016395350049957208"}},"outputId":"614e4651-0f9e-4e41-baec-9b68b67730fa"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["18\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#barchart of age and stress level\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","#Assuming you want to plot the distribution of a categorical column\n","#Replace 'your_column_name' with the actual column name from your dataframe\n","sns.histplot(x='age', y='stress_level', data=df)\n","\n","#Add titles and labels for clarity\n","plt.title('Age & Stress')\n","plt.xlabel('age')\n","plt.ylabel('stress level')\n","\n","#Display the plot\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"j5XiyQK80s6a","executionInfo":{"status":"ok","timestamp":1747865500540,"user_tz":420,"elapsed":271,"user":{"displayName":"Shamica Tendolkar","userId":"07016395350049957208"}},"outputId":"33513be6-5028-401e-962a-325bfa9824aa"},"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Submission Requirements\n","\n"],"metadata":{"id":"A2mS9oPNy2_Y"}},{"cell_type":"markdown","source":["#Analysis\n","-My age vs number of notification and age vs stress level both help to answer impact of social media/screen time and productivity based on demographics. This helps because the data shows a correlation between specific ages or demographics and the amount of stress they feel as well. Showing how more screen time is positively correlated with stress therfore less productivity.\n","\n","-One thing I noticed was some limitations of my data even after cleaning and analyzing is that the patterns don't make a ton of sense. I would think younger people would have a higher amount of notifications, creating more stress/less productivity. The data shows older people have a higher amount of notifications and a higher level of stress as well. I think this could be due to work rather than free time but could have an effect on the overall answer.\n"],"metadata":{"id":"Qm-fRbd78UYr"}},{"cell_type":"markdown","source":["## NOTE: If you use a local dataset, you MUST submit the dataset along with your notebook to get credit."],"metadata":{"id":"yIByyb4vy_Aw"}},{"cell_type":"markdown","source":["* Download your notebook as CS110_Project7.ipynb\n","* Ensure all TODO tasks are completed\n","* Make sure your code runs without errors\n","* Include clear comments explaining your work\n","* Submit the notebook file"],"metadata":{"id":"XwJbmaQay6ca"}},{"cell_type":"markdown","source":["## Grading Criteria (4 points)"],"metadata":{"id":"_GoDoJBWzQjK"}},{"cell_type":"markdown","source":["* Dataset Selection: Appropriate choice of dataset with sufficient complexity\n","* Inquiry Question: Clear, specific, and answerable with the chosen data\n","* Data Exploration: Proper use of pandas functions for initial analysis\n","* Visualizations: At least 2 clear, well-formatted, and relevant plots\n","* Analysis: Thoughtful interpretation of findings and answer to research question\n","* Code Quality: Clean, commented, and well-organized code\n","\n","Remember: The goal is not just to create visualizations, but to use them to gain meaningful insights about your data. Think like a data scientist and let your curiosity guide your exploration!"],"metadata":{"id":"MeHGEh8HzTua"}}]}